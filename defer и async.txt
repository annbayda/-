¬ современных сайтах скрипты обычно Ђт€желееї, чем HTML: они вес€т больше, дольше обрабатываютс€.

 огда браузер загружает HTML и доходит до тега <script>...</script>, он не может продолжать строить DOM. 
ќн должен сначала выполнить скрипт. “о же самое происходит и с внешними скриптами <script src="..."></script>: браузер должен подождать,
пока загрузитс€ скрипт, выполнить его, и только затем обработать остальную страницу.

  счастью, есть два атрибута тега <script>, которые решают нашу проблему: defer и async.


” async и defer есть кое-что общее: они не блокируют отрисовку страницы. “ак что пользователь может просмотреть содержимое страницы и ознакомитьс€ с ней сразу же.



Ќо есть и значимые различи€:

async
јтрибут async означает, что скрипт абсолютно независим

ѕор€док загрузки
(кто загрузитс€ первым, тот и сработает)

DOMContentLoaded
Ќе имеет значени€. ћожет загрузитьс€ и выполнитьс€ до того, как страница полностью загрузитс€. 
“акое случаетс€, если скрипты маленькие или хран€тс€ в кеше, а документ достаточно большой.

defer
јтрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт в фоновом режиме, 
а затем запустить этот скрипт, когда он загрузитс€.
јтрибут defer предназначен только дл€ внешних скриптов

ѕор€док загрузки
(как расположены в документе)

DOMContentLoaded
¬ыполн€етс€ после того, как документ загружен и обработан (ждЄт), непосредственно перед DOMContentLoaded.